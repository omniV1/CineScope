@using Microsoft.AspNetCore.Components.Routing
@using MudBlazor
@using System.Threading.Tasks

<!-- MudBlazor theme provider with custom CineScope theme -->
<MudThemeProvider Theme="cineScopeTheme" IsDarkMode="true" />

<!-- MudBlazor dialog provider for displaying dialogs -->
<MudDialogProvider />

<!-- MudBlazor snackbar provider for toast notifications -->
<MudSnackbarProvider />

@if (!_loaded)
{
    <!-- Loading screen displayed while the application initializes -->
    <div style="display: flex; justify-content: center; align-items: center; height: 100vh; background-color: #0f0f0f; color: white;">
        <div style="text-align: center;">
            <h1 style="color: #8534db; margin-bottom: 20px;">CineScope</h1>
            <!-- MudBlazor circular progress indicator -->
            <div class="mud-progress-circular mud-default-text" role="progressbar" style="height: 40px; width: 40px; margin: 20px auto;">
                <svg class="mud-progress-circular-svg" viewBox="22 22 44 44">
                    <circle class="mud-progress-circular-circle-indeterminate" cx="44" cy="44" r="20" fill="none" stroke-width="3" stroke="#8534db"></circle>
                </svg>
            </div>
            <p>Loading your cinematic experience...</p>
        </div>
    </div>
}
else
{
    <!-- Router component for client-side navigation -->
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <!-- Render the matched route with the default layout -->
            <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
            <!-- Set focus on the h1 element when navigating -->
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <!-- Custom 404 page for routes that don't match any component -->
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <MudContainer MaxWidth="MaxWidth.Medium" Class="mt-10 px-8">
                    <MudText Typo="Typo.h3" Align="Align.Center" GutterBottom="true">404 - Page Not Found</MudText>
                    <MudText Typo="Typo.body1" Align="Align.Center">The page you're looking for doesn't exist or has been moved.</MudText>
                    <MudButton Class="mt-5" Variant="Variant.Filled" Color="Color.Primary" Href="/" Size="Size.Large">Return Home</MudButton>
                </MudContainer>
            </LayoutView>
        </NotFound>
    </Router>
}

@code {
    /// <summary>
    /// Tracks whether the application has completed initial loading.
    /// </summary>
    private bool _loaded = false;

    /// <summary>
    /// Custom theme definition for CineScope with HBO Max inspired colors.
    /// </summary>
    private MudTheme cineScopeTheme = new MudTheme()
                {
                    PaletteDark = new PaletteDark()
                    {
                        Black = "#0f0f0f",
                        White = "#ffffff",
                        Primary = "#E50914", // Updated to logo red
                        Secondary = "#f5f5f1", // Off-white for contrast
                        Success = "#3bef9e",
                        Error = "#ff3f5b",
                        Warning = "#ffb527",
                        Info = "#2196f3",
                        Background = "#0f0f0f",
                        BackgroundGrey = "#1a1a1a",
                        Surface = "#1a1a1a",
                        AppbarBackground = "#0f0f0f",
                        AppbarText = "#ffffff",
                        DrawerBackground = "#1a1a1a",
                        DrawerText = "#ffffff",
                        TextPrimary = "#ffffff",
                        TextSecondary = "#b3b3b3",
                        ActionDefault = "#ffffff",
                        ActionDisabled = "#636363",
                        ActionDisabledBackground = "#2c2c2c",
                        LinesDefault = "#2c2c2c",
                        LinesInputs = "#4a4a4a",
                        TableLines = "#2c2c2c",
                        TableStriped = "#2c2c2c"
                    },
            Typography = new Typography()
            {
                Default = new Default()
                {
                    FontFamily = new[] { "Roboto", "Helvetica", "Arial", "sans-serif" },
                    FontSize = "1rem",
                    FontWeight = 400,
                    LineHeight = 1.5,
                    LetterSpacing = ".00938em"
                },
                H1 = new H1()
                {
                    FontSize = "2.5rem",
                    FontWeight = 700,
                    LineHeight = 1.167,
                    LetterSpacing = "-.01562em"
                },
                H2 = new H2()
                {
                    FontSize = "2rem",
                    FontWeight = 700,
                    LineHeight = 1.2,
                    LetterSpacing = "-.00833em"
                }
            }
        };

    /// <summary>
    /// Initialization method called when the component is first rendered.
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Simulate a short delay to ensure all resources are loaded
            await Task.Delay(500);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error during initialization: {ex.Message}");
        }
        finally
        {
            // Always set loaded to true to prevent infinite loading
            _loaded = true;
            StateHasChanged();
        }
    }
}
}