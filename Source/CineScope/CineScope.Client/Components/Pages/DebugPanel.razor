@page "/debug"
@using CineScope.Client.ClientServices
@inject MovieClientService MovieService
@inject HttpClient Http

<h1>Debug Panel</h1>

<div class="card mb-4">
    <div class="card-header">API Connection Test</div>
    <div class="card-body">
        <button class="btn btn-primary" @onclick="TestMovieApi">Test Movie API</button>
        <button class="btn btn-secondary ms-2" @onclick="TestPingApi">Test Ping API</button>

        @if (!string.IsNullOrEmpty(apiResult))
        {
            <div class="alert @(apiSuccess ? "alert-success" : "alert-danger") mt-3">
                <h5>@(apiSuccess ? "Success!" : "Error!")</h5>
                <pre>@apiResult</pre>
            </div>
        }
    </div>
</div>

<div class="card">
    <div class="card-header">Client Info</div>
    <div class="card-body">
        <p><strong>Base Address:</strong> @Http.BaseAddress</p>
        <p><strong>Default Headers:</strong></p>
        <ul>
            @foreach (var header in Http.DefaultRequestHeaders)
            {
                <li>@header.Key: @string.Join(", ", header.Value)</li>
            }
        </ul>
    </div>
</div>

@code {
    private string apiResult = "";
    private bool apiSuccess = false;

    private async Task TestMovieApi()
    {
        try
        {
            apiResult = "Fetching movies...";
            var movies = await MovieService.GetAllMoviesAsync();
            apiSuccess = true;
            apiResult = $"Success! Retrieved {movies.Count} movies.\n\nFirst movie: {(movies.Count > 0 ? movies[0].Title : "None")}";
        }
        catch (Exception ex)
        {
            apiSuccess = false;
            apiResult = $"Error: {ex.Message}\n\nStack trace: {ex.StackTrace}";
        }
    }

    private async Task TestPingApi()
    {
        try
        {
            apiResult = "Pinging API...";
            var response = await Http.GetAsync("api/ping");

            if (response.IsSuccessStatusCode)
            {
                var content = await response.Content.ReadAsStringAsync();
                apiSuccess = true;
                apiResult = $"Success! Status code: {(int)response.StatusCode}\n\nResponse: {content}";
            }
            else
            {
                apiSuccess = false;
                apiResult = $"Error: Status code {(int)response.StatusCode}\n\nReason: {response.ReasonPhrase}";
            }
        }
        catch (Exception ex)
        {
            apiSuccess = false;
            apiResult = $"Error: {ex.Message}\n\nStack trace: {ex.StackTrace}";
        }
    }
}<h3>DebugPanel</h3>

@code {

}
