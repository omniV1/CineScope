@page "/movie/{Id}"
@using CineScope.Client.ClientServices
@using CineScope.Shared.Models
@inject MovieClientService MovieService

<div class="container mt-4">
    @if (movie == null)
    {
        <div class="text-center">
            <div class="spinner-border text-danger" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p>Loading movie details...</p>
        </div>
    }
    else
    {
        <div class="card">
            <div class="row g-0">
                <div class="col-md-4">
                    <img src="@movie.PosterUrl" class="img-fluid rounded-start" alt="@movie.Title"
                         onerror="this.src='https://via.placeholder.com/500x750?text=No+Image';">
                </div>
                <div class="col-md-8">
                    <div class="card-body">
                        <h2 class="card-title">@movie.Title <span class="badge bg-danger">@movie.AverageRating.ToString("0.0")</span></h2>
                        <p class="card-text">
                            <small class="text-muted">Released: @movie.ReleaseDate.ToString("MMMM dd, yyyy")</small>
                        </p>
                        <p class="card-text">
                            <strong>Director:</strong> @movie.Director
                        </p>
                        <p class="card-text">
                            <strong>Cast:</strong> @string.Join(", ", movie.Actors)
                        </p>
                        <p class="card-text">
                            <strong>Genres:</strong>
                            @foreach (var genre in movie.Genres)
                            {
                                <span class="badge bg-secondary me-1">@genre</span>
                            }
                        </p>
                        <h4>Synopsis</h4>
                        <p class="card-text">@movie.Description</p>

                        <h4 class="mt-4">Reviews (@movie.ReviewCount)</h4>
                        <button class="btn btn-outline-primary" @onclick="ToggleReviews">
                            @(showReviews ? "Hide Reviews" : "Show Reviews")
                        </button>
                        <a href="/review/create/@movie.Id" class="btn btn-primary ms-2">Write a Review</a>

                        @if (showReviews)
                        {
                            <div class="mt-3">
                                @if (reviews == null)
                                {
                                    <p>Loading reviews...</p>
                                }
                                else if (!reviews.Any())
                                {
                                    <p>No reviews yet. Be the first to review this movie!</p>
                                }
                                else
                                {
                                    @foreach (var review in reviews)
                                    {
                                        <div class="card mb-3">
                                            <div class="card-body">
                                                <h5 class="card-title">
                                                    @for (int i = 0; i < (int)review.Rating; i++)
                                                    {
                                                        <span class="text-warning">★</span>
                                                    }
                                                    @for (int i = 0; i < 5 - (int)review.Rating; i++)
                                                    {
                                                        <span class="text-muted">☆</span>
                                                    }
                                                </h5>
                                                <p class="card-text">@review.Text</p>
                                                <p class="card-text">
                                                    <small class="text-muted">
                                                        Posted on @review.CreatedAt.ToString("MMM dd, yyyy")
                                                    </small>
                                                </p>
                                            </div>
                                        </div>
                                    }
                                }
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="mt-3">
            <a href="/" class="btn btn-secondary">Back to Home</a>
        </div>
    }
</div>

@code {
    [Parameter]
    public string Id { get; set; }

    private MovieModel movie;
    private List<ReviewModel> reviews;
    private bool showReviews = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            movie = await MovieService.GetMovieAsync(Id);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading movie: {ex.Message}");
        }
    }

    private async Task ToggleReviews()
    {
        showReviews = !showReviews;

        if (showReviews && reviews == null)
        {
            try
            {
                reviews = await MovieService.GetMovieReviewsAsync(Id);
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error loading reviews: {ex.Message}");
                reviews = new List<ReviewModel>();
            }
        }
    }
}